#summary Программа «Zoomka». Техническое задание (проект)

= 1 Общее описание системы =
Назначение программы — организация рабочего пространства пользователя, где он может структурированно *хранить информацию*, осуществлять по ней *навигацию* и *производить изменения*.

Это пространство представляет собой неограниченный плоский «рабочий стол», на котором находятся различные пользовательские объекты. Для навигации используются две основные операции: *перемещение по плоскости* и *изменение масштаба* (Pan & Zoom).

При изменении масштаба происходит также изменение *степени детализации*: объекты начинают показывать больше (или меньше) информации о себе.

*Метафора*. Интерфейс программы напоминает две известные вещи:
  # Программу *Google Earth* (Maps), где пользователь может перемещаться по карте и менять ее степень детализации, приближая и отдаляя ее.
  # *Компьютерные игры-стратегии* (RTS), где игрок также смотрит на мир с высоты птичьего полета, а также может вмешиваться в происходящее, отдавая объектам на карте приказы.

*Важное отличие*. В RTS-играх для получения дополнительной информации, а также для отдачи приказов, как правило, используются классические «оконно-кнопочные» элементы интерфейса пользователя, расположенные в нижней части экрана. Такой подход противоречит принципу детализации: дополнительная информация об объекте и органы управления им логически находятся _внутри_ этого объекта — и поэтому должны быть доступны посредством «заглядывания внутрь», а не в виде отдельной панельки.

= 2 Функциональные требования =
== Структура хранимой информации ==
Структура информации — древовидная. Есть несколько объектов верхнего уровня, каждый из них состоит из каких-то частей и т.д.
Имеется два типа объектов: документы и папки (с документами). Хотя различие между ними весьма условное: многие документы тоже имеют внутреннюю структуру. Текстовый документ, например, может состоять из глав и абзацев. В свою очередь, папки на верхних уровнях детализации теряют структуру и представляют одну только характеристику — свой размер на диске (например).

== Навигация ==
Объекты рабочего пространства при разном масштабе отображаются с различным количеством подробностей. Поэтому для каждого объекта может быть определено несколько уровней детализации. Например: просто значок, значок с названием, название + основные характеристики, диаграмма основных составных частей, и т.д., полномасштабное детальное представление.

Желательно иметь возможность изменять общий масштаб сцены дискретно: +1 или -1 уровень детализации.

Многие документы могут иметь более одного способа представления. Например, .doc-файл может быть «просмотрен» как в виде страниц с текстом, так и в виде диалогового окна «параметры страницы», списка использованных стилей с их характеристиками и т.п. Фотография — как в виде собственно изображения, так и в виде метаинформации (дата снимка, модель камеры и пр.) или гистограммы распределения яркости. Чтобы это учесть, превратим цепочку уровней детализации в *дерево уровней детализации* — на некоторых уровнях пользователю необходимо будет сделать выбор способа дальнейшего увеличения детализации. Например, для фотоснимка один из промежуточных уровней детализации может показывать миниатюру изображения с наложенными на нее гистограммой и основной информацией о снимке; для более подробного просмотра гистограммы пользователь должен кликнуть на гистограмму, для просмотра фотографии — на изображение.

Если на экране имеется несколько объектов, требующих от пользователя выбора способа представления, и пользователь делает «zoom in», то нельзя требовать от него клацнуть по каждому из этих объектов и обозначить этим свой выбор. В случае наличия у объекта нескольких способов представления один из них должен быть назначен способом представления "по умолчанию". Именно этот способ и выбирается автоматически. Для фотоснимка это, очевидно, изображение, для .doc-файла — его текст.

== Внесение изменений ==
Изменение отображения - перемещение и изменение размеров объектов на столе.
Изменение содержимого - копирование, удаление, создание и изменение документов. На первых порах не планируется.

= Прочие требования =
Система должна быть *переносимой* - посему WinAPI использовать запрещается. В всяческие кроссплатформенные библиотеки - наоборот, поощряется. Например: [http://boost.org BOOST], [http://en.wikipedia.org/wiki/Gtk%2B GTK+], [http://ru.wikipedia.org/wiki/Qt Qt], [http://en.wikipedia.org/wiki/Cairo_%28graphics%29 Cairo] etc...

Также желательна максимально "тонкая" связь между самим "рабочим столом" и работающим с ним пользователем. В идеале:
  # несколько пользователей могут работать с одним столом одновременно;
  # стол и пользователь могут находиться на разных машинах, обмениваясь информацией по сети;
  # пользователь может взаимодействовать со столом через веб-браузер.